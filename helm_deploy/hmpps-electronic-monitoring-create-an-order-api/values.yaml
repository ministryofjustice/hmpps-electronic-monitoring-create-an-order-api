generic-service:
  nameOverride: hmpps-electronic-monitoring-create-an-order-api
  productId: "HMPPS529" # productId for the product that this belongs too, i.e. DPS001, see README.md for details

  replicaCount: 4

  image:
    repository: quay.io/hmpps/hmpps-electronic-monitoring-create-an-order-api
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-ems-cemo-ui-cert

  # Environment variables to load into the deployment
  env:
    JAVA_OPTS: "-Xmx512m"
    SERVER_PORT: "8080"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY)"
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-electronic-monitoring-create-an-order-api:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      CLIENT_ID: "API_CLIENT_ID"
      CLIENT_SECRET: "API_CLIENT_SECRET"
    serco-secret:
      SERCO_AUTH_URL: "SERCO_AUTH_URL"
      SERCO_CLIENT_ID: "SERCO_CLIENT_ID"
      SERCO_CLIENT_SECRET: "SERCO_CLIENT_SECRET"
      SERCO_USERNAME: "SERCO_USERNAME"
      SERCO_PASSWORD: "SERCO_PASSWORD"
      SERCO_URL: "SERCO_URL"
    rds-postgresql-instance-output:
      DB_SERVER: "rds_instance_endpoint"
      DB_NAME: "database_name"
      DB_USER: "database_username"
      DB_PASS: "database_password"
  allowlist:
    groups:
      - internal

generic-prometheus-alerts:
  targetApplication: hmpps-electronic-monitoring-create-an-order-api
